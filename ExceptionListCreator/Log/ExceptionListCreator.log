2020-06-17 10:45:10.227  INFO 12652 --- [main] c.c.s.E.ExceptionListCreatorApplication  : No active profile set, falling back to default profiles: default
2020-06-17 10:45:11.046  INFO 12652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-17 10:45:11.047  INFO 12652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-17 10:45:11.130  INFO 12652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 78ms. Found 1 MongoDB repository interfaces.
2020-06-17 10:45:11.146  INFO 12652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-17 10:45:11.148  INFO 12652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-17 10:45:11.174  INFO 12652 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.citi.stg.ExceptionListCreator.MongoRepository.TradeRepositoryForMongoDB. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-17 10:45:11.175  INFO 12652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-06-17 10:45:11.604  INFO 12652 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=068900e3-499a-303f-ab5e-2d9d581b8d30
2020-06-17 10:45:11.681  INFO 12652 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2020-06-17 10:45:11.693  INFO 12652 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2020-06-17 10:45:11.698  INFO 12652 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2020-06-17 10:45:11.747  INFO 12652 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-17 10:45:11.751  INFO 12652 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-17 10:45:11.760  INFO 12652 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-17 10:45:11.769  INFO 12652 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-17 10:45:11.792  INFO 12652 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-17 10:45:11.795  INFO 12652 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-17 10:45:11.812  INFO 12652 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e73b59a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-17 10:45:12.541  INFO 12652 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-06-17 10:45:12.680  INFO 12652 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-06-17 10:45:12.681  INFO 12652 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-06-17 10:45:12.870  INFO 12652 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-06-17 10:45:12.871  INFO 12652 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2609 ms
2020-06-17 10:45:13.483  INFO 12652 --- [main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=tradeprocessing-oasxz.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='TradeProcessing-shard-0'}
2020-06-17 10:45:13.564  INFO 12652 --- [cluster-ClusterId{value='5ee9a6e1f915143aab109db0', description='null'}-srv-tradeprocessing-oasxz.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server tradeprocessing-shard-00-00-oasxz.mongodb.net:27017 to client view of cluster
2020-06-17 10:45:13.621  INFO 12652 --- [cluster-ClusterId{value='5ee9a6e1f915143aab109db0', description='null'}-srv-tradeprocessing-oasxz.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server tradeprocessing-shard-00-01-oasxz.mongodb.net:27017 to client view of cluster
2020-06-17 10:45:13.623  INFO 12652 --- [cluster-ClusterId{value='5ee9a6e1f915143aab109db0', description='null'}-srv-tradeprocessing-oasxz.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server tradeprocessing-shard-00-02-oasxz.mongodb.net:27017 to client view of cluster
2020-06-17 10:45:14.586  INFO 12652 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-06-17 10:45:15.753  INFO 12652 --- [cluster-ClusterId{value='5ee9a6e1f915143aab109db0', description='null'}-tradeprocessing-shard-00-01-oasxz.mongodb.net:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:37028}] to tradeprocessing-shard-00-01-oasxz.mongodb.net:27017
2020-06-17 10:45:15.753  INFO 12652 --- [cluster-ClusterId{value='5ee9a6e1f915143aab109db0', description='null'}-tradeprocessing-shard-00-02-oasxz.mongodb.net:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:34375}] to tradeprocessing-shard-00-02-oasxz.mongodb.net:27017
2020-06-17 10:45:15.753  INFO 12652 --- [cluster-ClusterId{value='5ee9a6e1f915143aab109db0', description='null'}-tradeprocessing-shard-00-00-oasxz.mongodb.net:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:25565}] to tradeprocessing-shard-00-00-oasxz.mongodb.net:27017
2020-06-17 10:45:15.858  INFO 12652 --- [cluster-ClusterId{value='5ee9a6e1f915143aab109db0', description='null'}-tradeprocessing-shard-00-00-oasxz.mongodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=tradeprocessing-shard-00-00-oasxz.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=100740501, setName='TradeProcessing-shard-0', canonicalAddress=tradeprocessing-shard-00-00-oasxz.mongodb.net:27017, hosts=[tradeprocessing-shard-00-02-oasxz.mongodb.net:27017, tradeprocessing-shard-00-00-oasxz.mongodb.net:27017, tradeprocessing-shard-00-01-oasxz.mongodb.net:27017], passives=[], arbiters=[], primary='tradeprocessing-shard-00-01-oasxz.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}]}, electionId=null, setVersion=2, lastWriteDate=Wed Jun 17 10:45:12 IST 2020, lastUpdateTimeNanos=271282502943300}
2020-06-17 10:45:15.869  INFO 12652 --- [cluster-ClusterId{value='5ee9a6e1f915143aab109db0', description='null'}-tradeprocessing-shard-00-02-oasxz.mongodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=tradeprocessing-shard-00-02-oasxz.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=113541300, setName='TradeProcessing-shard-0', canonicalAddress=tradeprocessing-shard-00-02-oasxz.mongodb.net:27017, hosts=[tradeprocessing-shard-00-02-oasxz.mongodb.net:27017, tradeprocessing-shard-00-00-oasxz.mongodb.net:27017, tradeprocessing-shard-00-01-oasxz.mongodb.net:27017], passives=[], arbiters=[], primary='tradeprocessing-shard-00-01-oasxz.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}]}, electionId=null, setVersion=2, lastWriteDate=Wed Jun 17 10:45:12 IST 2020, lastUpdateTimeNanos=271282515052300}
2020-06-17 10:45:15.880  INFO 12652 --- [cluster-ClusterId{value='5ee9a6e1f915143aab109db0', description='null'}-tradeprocessing-shard-00-01-oasxz.mongodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=tradeprocessing-shard-00-01-oasxz.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=125294700, setName='TradeProcessing-shard-0', canonicalAddress=tradeprocessing-shard-00-01-oasxz.mongodb.net:27017, hosts=[tradeprocessing-shard-00-02-oasxz.mongodb.net:27017, tradeprocessing-shard-00-00-oasxz.mongodb.net:27017, tradeprocessing-shard-00-01-oasxz.mongodb.net:27017], passives=[], arbiters=[], primary='tradeprocessing-shard-00-01-oasxz.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}]}, electionId=7fffffff0000000000000008, setVersion=2, lastWriteDate=Wed Jun 17 10:45:12 IST 2020, lastUpdateTimeNanos=271282526802900}
2020-06-17 10:45:15.881  INFO 12652 --- [cluster-ClusterId{value='5ee9a6e1f915143aab109db0', description='null'}-tradeprocessing-shard-00-01-oasxz.mongodb.net:27017] org.mongodb.driver.cluster               : Setting max election id to 7fffffff0000000000000008 from replica set primary tradeprocessing-shard-00-01-oasxz.mongodb.net:27017
2020-06-17 10:45:15.881  INFO 12652 --- [cluster-ClusterId{value='5ee9a6e1f915143aab109db0', description='null'}-tradeprocessing-shard-00-01-oasxz.mongodb.net:27017] org.mongodb.driver.cluster               : Setting max set version to 2 from replica set primary tradeprocessing-shard-00-01-oasxz.mongodb.net:27017
2020-06-17 10:45:15.882  INFO 12652 --- [cluster-ClusterId{value='5ee9a6e1f915143aab109db0', description='null'}-tradeprocessing-shard-00-01-oasxz.mongodb.net:27017] org.mongodb.driver.cluster               : Discovered replica set primary tradeprocessing-shard-00-01-oasxz.mongodb.net:27017
2020-06-17 10:45:15.941  INFO 12652 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService 'taskScheduler'
2020-06-17 10:45:16.130  INFO 12652 --- [main] o.s.i.monitor.IntegrationMBeanExporter   : Registering MessageChannel errorChannel
2020-06-17 10:45:16.209  INFO 12652 --- [main] o.s.i.monitor.IntegrationMBeanExporter   : Registering MessageChannel nullChannel
2020-06-17 10:45:16.231  INFO 12652 --- [main] o.s.i.monitor.IntegrationMBeanExporter   : Registering MessageHandler errorLogger
2020-06-17 10:45:16.294  INFO 12652 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-06-17 10:45:16.295  INFO 12652 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application-1.errorChannel' has 1 subscriber(s).
2020-06-17 10:45:16.296  INFO 12652 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2020-06-17 10:45:16.428  INFO 12652 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [moped-01.srvs.cloudkafka.com:9094, moped-02.srvs.cloudkafka.com:9094, moped-03.srvs.cloudkafka.com:9094]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = 56y1nhk1-GenericTradeObject
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = [hidden]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = SCRAM-SHA-256
	security.protocol = SASL_SSL
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.citi.stg.ExceptionListCreator.GenericTradeModel.GenericTradeDeserializer

2020-06-17 10:45:17.344  INFO 12652 --- [main] o.a.k.c.s.authenticator.AbstractLogin    : Successfully logged in.
2020-06-17 10:45:17.495  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.5.0
2020-06-17 10:45:17.495  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 66563e712b0b9f84
2020-06-17 10:45:17.495  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1592370917488
2020-06-17 10:45:17.517  INFO 12652 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] Subscribed to topic(s): 56y1nhk1-GenericTradeObject
2020-06-17 10:45:17.520  INFO 12652 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2020-06-17 10:45:17.617  INFO 12652 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [moped-01.srvs.cloudkafka.com:9094, moped-02.srvs.cloudkafka.com:9094, moped-03.srvs.cloudkafka.com:9094]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = 56y1nhk1-GenericTradeObject
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = [hidden]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = SCRAM-SHA-256
	security.protocol = SASL_SSL
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.citi.stg.ExceptionListCreator.GenericTradeModel.GenericTradeDeserializer

2020-06-17 10:45:17.658  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.5.0
2020-06-17 10:45:17.665  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 66563e712b0b9f84
2020-06-17 10:45:17.665  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1592370917658
2020-06-17 10:45:17.666  INFO 12652 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-2, groupId=56y1nhk1-GenericTradeObject] Subscribed to topic(s): 56y1nhk1-GenericTradeObject
2020-06-17 10:45:17.666  INFO 12652 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2020-06-17 10:45:17.669  INFO 12652 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [moped-01.srvs.cloudkafka.com:9094, moped-02.srvs.cloudkafka.com:9094, moped-03.srvs.cloudkafka.com:9094]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = 56y1nhk1-GenericTradeObject
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = [hidden]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = SCRAM-SHA-256
	security.protocol = SASL_SSL
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.citi.stg.ExceptionListCreator.GenericTradeModel.GenericTradeDeserializer

2020-06-17 10:45:17.684  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.5.0
2020-06-17 10:45:17.684  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 66563e712b0b9f84
2020-06-17 10:45:17.684  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1592370917684
2020-06-17 10:45:17.685  INFO 12652 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-3, groupId=56y1nhk1-GenericTradeObject] Subscribed to topic(s): 56y1nhk1-GenericTradeObject
2020-06-17 10:45:17.685  INFO 12652 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2020-06-17 10:45:17.690  INFO 12652 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [moped-01.srvs.cloudkafka.com:9094, moped-02.srvs.cloudkafka.com:9094, moped-03.srvs.cloudkafka.com:9094]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = 56y1nhk1-GenericTradeObject
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = [hidden]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = SCRAM-SHA-256
	security.protocol = SASL_SSL
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.citi.stg.ExceptionListCreator.GenericTradeModel.GenericTradeDeserializer

2020-06-17 10:45:17.710  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.5.0
2020-06-17 10:45:17.713  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 66563e712b0b9f84
2020-06-17 10:45:17.714  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1592370917709
2020-06-17 10:45:17.716  INFO 12652 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-4, groupId=56y1nhk1-GenericTradeObject] Subscribed to topic(s): 56y1nhk1-GenericTradeObject
2020-06-17 10:45:17.717  INFO 12652 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2020-06-17 10:45:17.725  INFO 12652 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [moped-01.srvs.cloudkafka.com:9094, moped-02.srvs.cloudkafka.com:9094, moped-03.srvs.cloudkafka.com:9094]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = 56y1nhk1-GenericTradeObject
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = [hidden]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = SCRAM-SHA-256
	security.protocol = SASL_SSL
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.citi.stg.ExceptionListCreator.GenericTradeModel.GenericTradeDeserializer

2020-06-17 10:45:17.735  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.5.0
2020-06-17 10:45:17.736  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 66563e712b0b9f84
2020-06-17 10:45:17.736  INFO 12652 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1592370917735
2020-06-17 10:45:17.736  INFO 12652 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-5, groupId=56y1nhk1-GenericTradeObject] Subscribed to topic(s): 56y1nhk1-GenericTradeObject
2020-06-17 10:45:17.737  INFO 12652 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2020-06-17 10:45:18.140  INFO 12652 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-06-17 10:45:18.171  INFO 12652 --- [main] c.c.s.E.ExceptionListCreatorApplication  : Started ExceptionListCreatorApplication in 11.52 seconds (JVM running for 12.896)
2020-06-17 10:45:21.554  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-2, groupId=56y1nhk1-GenericTradeObject] Cluster ID: oKidZzIGS8CpolkrwCTN7A
2020-06-17 10:45:21.554  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] Cluster ID: oKidZzIGS8CpolkrwCTN7A
2020-06-17 10:45:21.558  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] Discovered group coordinator moped-01.srvs.cloudkafka.com:9094 (id: 2147483647 rack: null)
2020-06-17 10:45:21.558  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-2, groupId=56y1nhk1-GenericTradeObject] Discovered group coordinator moped-01.srvs.cloudkafka.com:9094 (id: 2147483647 rack: null)
2020-06-17 10:45:21.566  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] (Re-)joining group
2020-06-17 10:45:21.566  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-2, groupId=56y1nhk1-GenericTradeObject] (Re-)joining group
2020-06-17 10:45:21.849  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-5, groupId=56y1nhk1-GenericTradeObject] Cluster ID: oKidZzIGS8CpolkrwCTN7A
2020-06-17 10:45:21.849  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-4, groupId=56y1nhk1-GenericTradeObject] Cluster ID: oKidZzIGS8CpolkrwCTN7A
2020-06-17 10:45:21.850  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-5, groupId=56y1nhk1-GenericTradeObject] Discovered group coordinator moped-01.srvs.cloudkafka.com:9094 (id: 2147483647 rack: null)
2020-06-17 10:45:21.850  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-4, groupId=56y1nhk1-GenericTradeObject] Discovered group coordinator moped-01.srvs.cloudkafka.com:9094 (id: 2147483647 rack: null)
2020-06-17 10:45:21.852  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-4, groupId=56y1nhk1-GenericTradeObject] (Re-)joining group
2020-06-17 10:45:21.852  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-5, groupId=56y1nhk1-GenericTradeObject] (Re-)joining group
2020-06-17 10:45:22.597  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-3, groupId=56y1nhk1-GenericTradeObject] Cluster ID: oKidZzIGS8CpolkrwCTN7A
2020-06-17 10:45:22.598  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-3, groupId=56y1nhk1-GenericTradeObject] Discovered group coordinator moped-01.srvs.cloudkafka.com:9094 (id: 2147483647 rack: null)
2020-06-17 10:45:22.600  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-3, groupId=56y1nhk1-GenericTradeObject] (Re-)joining group
2020-06-17 10:45:24.298  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-2, groupId=56y1nhk1-GenericTradeObject] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
2020-06-17 10:45:24.298  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
2020-06-17 10:45:24.299  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] (Re-)joining group
2020-06-17 10:45:24.299  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-2, groupId=56y1nhk1-GenericTradeObject] (Re-)joining group
2020-06-17 10:45:24.775  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-4, groupId=56y1nhk1-GenericTradeObject] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
2020-06-17 10:45:24.776  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-4, groupId=56y1nhk1-GenericTradeObject] (Re-)joining group
2020-06-17 10:45:25.019  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-5, groupId=56y1nhk1-GenericTradeObject] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
2020-06-17 10:45:25.020  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-5, groupId=56y1nhk1-GenericTradeObject] (Re-)joining group
2020-06-17 10:45:25.490  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-3, groupId=56y1nhk1-GenericTradeObject] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
2020-06-17 10:45:25.491  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-3, groupId=56y1nhk1-GenericTradeObject] (Re-)joining group
2020-06-17 10:45:27.607  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] Finished assignment for group at generation 173: {consumer-56y1nhk1-GenericTradeObject-5-0b439fa6-d873-47ab-82bc-6947677785ea=Assignment(partitions=[56y1nhk1-GenericTradeObject-4]), consumer-56y1nhk1-GenericTradeObject-3-ffb5a689-934c-4c4e-aa2d-912306b63205=Assignment(partitions=[56y1nhk1-GenericTradeObject-2]), consumer-56y1nhk1-GenericTradeObject-4-fb83fc1d-75d7-4c01-9eda-1bb848573e55=Assignment(partitions=[56y1nhk1-GenericTradeObject-3]), consumer-56y1nhk1-GenericTradeObject-2-1962a68d-f0cd-4d14-9e17-e127145f18c0=Assignment(partitions=[56y1nhk1-GenericTradeObject-1]), consumer-56y1nhk1-GenericTradeObject-1-9cc95cbd-fbb0-4fae-9f5a-a0d7acb8b41b=Assignment(partitions=[56y1nhk1-GenericTradeObject-0])}
2020-06-17 10:45:28.624  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-2, groupId=56y1nhk1-GenericTradeObject] Successfully joined group with generation 173
2020-06-17 10:45:28.624  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-5, groupId=56y1nhk1-GenericTradeObject] Successfully joined group with generation 173
2020-06-17 10:45:28.624  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-4, groupId=56y1nhk1-GenericTradeObject] Successfully joined group with generation 173
2020-06-17 10:45:28.624  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-3, groupId=56y1nhk1-GenericTradeObject] Successfully joined group with generation 173
2020-06-17 10:45:28.624  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] Successfully joined group with generation 173
2020-06-17 10:45:28.848  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] Adding newly assigned partitions: 56y1nhk1-GenericTradeObject-0
2020-06-17 10:45:28.848  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-2, groupId=56y1nhk1-GenericTradeObject] Adding newly assigned partitions: 56y1nhk1-GenericTradeObject-1
2020-06-17 10:45:28.848  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-4, groupId=56y1nhk1-GenericTradeObject] Adding newly assigned partitions: 56y1nhk1-GenericTradeObject-3
2020-06-17 10:45:28.848  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-3, groupId=56y1nhk1-GenericTradeObject] Adding newly assigned partitions: 56y1nhk1-GenericTradeObject-2
2020-06-17 10:45:28.848  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-5, groupId=56y1nhk1-GenericTradeObject] Adding newly assigned partitions: 56y1nhk1-GenericTradeObject-4
2020-06-17 10:45:29.410  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-5, groupId=56y1nhk1-GenericTradeObject] Setting offset for partition 56y1nhk1-GenericTradeObject-4 to the committed offset FetchPosition{offset=159, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[moped-03.srvs.cloudkafka.com:9094 (id: 2 rack: null)], epoch=absent}}
2020-06-17 10:45:29.410  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] Setting offset for partition 56y1nhk1-GenericTradeObject-0 to the committed offset FetchPosition{offset=125, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[moped-02.srvs.cloudkafka.com:9094 (id: 1 rack: null)], epoch=absent}}
2020-06-17 10:45:29.410  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-3, groupId=56y1nhk1-GenericTradeObject] Setting offset for partition 56y1nhk1-GenericTradeObject-2 to the committed offset FetchPosition{offset=150, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[moped-01.srvs.cloudkafka.com:9094 (id: 0 rack: null)], epoch=absent}}
2020-06-17 10:45:29.411  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-2, groupId=56y1nhk1-GenericTradeObject] Setting offset for partition 56y1nhk1-GenericTradeObject-1 to the committed offset FetchPosition{offset=141, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[moped-03.srvs.cloudkafka.com:9094 (id: 2 rack: null)], epoch=absent}}
2020-06-17 10:45:29.410  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-4, groupId=56y1nhk1-GenericTradeObject] Setting offset for partition 56y1nhk1-GenericTradeObject-3 to the committed offset FetchPosition{offset=145, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[moped-02.srvs.cloudkafka.com:9094 (id: 1 rack: null)], epoch=absent}}
2020-06-17 10:45:29.414  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : 56y1nhk1-GenericTradeObject: partitions assigned: [56y1nhk1-GenericTradeObject-1]
2020-06-17 10:45:29.414  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.s.k.l.KafkaMessageListenerContainer    : 56y1nhk1-GenericTradeObject: partitions assigned: [56y1nhk1-GenericTradeObject-4]
2020-06-17 10:45:29.415  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : 56y1nhk1-GenericTradeObject: partitions assigned: [56y1nhk1-GenericTradeObject-0]
2020-06-17 10:45:29.418  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : 56y1nhk1-GenericTradeObject: partitions assigned: [56y1nhk1-GenericTradeObject-2]
2020-06-17 10:45:29.417  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] o.s.k.l.KafkaMessageListenerContainer    : 56y1nhk1-GenericTradeObject: partitions assigned: [56y1nhk1-GenericTradeObject-3]
2020-06-17 10:45:32.724  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.consumer.internals.Fetcher       : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] Fetch offset 125 is out of range for partition 56y1nhk1-GenericTradeObject-0, resetting offset
2020-06-17 10:45:32.813  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.consumer.internals.Fetcher       : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-3, groupId=56y1nhk1-GenericTradeObject] Fetch offset 150 is out of range for partition 56y1nhk1-GenericTradeObject-2, resetting offset
2020-06-17 10:45:33.040  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] Resetting offset for partition 56y1nhk1-GenericTradeObject-0 to offset 127.
2020-06-17 10:45:33.116  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-3, groupId=56y1nhk1-GenericTradeObject] Resetting offset for partition 56y1nhk1-GenericTradeObject-2 to offset 151.
2020-06-17 10:45:33.360  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 1
2020-06-17 10:45:33.360  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HIC9347, firm=MLI, genericSecurity=GenericSecurity [securityType=CP, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:33.364  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:33.606  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.consumer.internals.Fetcher       : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-2, groupId=56y1nhk1-GenericTradeObject] Fetch offset 141 is out of range for partition 56y1nhk1-GenericTradeObject-1, resetting offset
2020-06-17 10:45:33.608  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.a.k.c.consumer.internals.Fetcher       : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-5, groupId=56y1nhk1-GenericTradeObject] Fetch offset 159 is out of range for partition 56y1nhk1-GenericTradeObject-4, resetting offset
2020-06-17 10:45:33.871  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-5, groupId=56y1nhk1-GenericTradeObject] Resetting offset for partition 56y1nhk1-GenericTradeObject-4 to offset 162.
2020-06-17 10:45:33.876  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-2, groupId=56y1nhk1-GenericTradeObject] Resetting offset for partition 56y1nhk1-GenericTradeObject-1 to offset 155.
2020-06-17 10:45:36.297  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheReader   : calling exception list Maker
2020-06-17 10:45:36.298  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] c.c.s.ExceptionListCreator.CacheReader   : calling exception list Maker
2020-06-17 10:45:36.300  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.c.s.ExceptionListCreator.CacheReader   : calling exception list Maker
2020-06-17 10:45:36.312  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 2
2020-06-17 10:45:36.312  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HIC9347, firm=MLI, genericSecurity=GenericSecurity [securityType=CP, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:36.313  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:36.314  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 3
2020-06-17 10:45:36.315  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HIC9347, firm=MLI, genericSecurity=GenericSecurity [securityType=CP, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:36.315  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:39.552  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:6, serverValue:35954}] to tradeprocessing-shard-00-01-oasxz.mongodb.net:27017
2020-06-17 10:45:39.875  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:4, serverValue:32985}] to tradeprocessing-shard-00-01-oasxz.mongodb.net:27017
2020-06-17 10:45:39.875  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:5, serverValue:35954}] to tradeprocessing-shard-00-01-oasxz.mongodb.net:27017
2020-06-17 10:45:40.001  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 1------------------------------------
2020-06-17 10:45:40.001  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.c.s.E.ExceptionListMaker               : >>>>>>>>>>>>>>>>   Trade with tradeId=  id4   is found to be duplicate   <<<<<<<<<<<<<<<
2020-06-17 10:45:40.001  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.ExceptionListMaker               : >>>>>>>>>>>>>>>>   Trade with tradeId=  id2   is found to be duplicate   <<<<<<<<<<<<<<<
2020-06-17 10:45:40.001  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 1------------------------------------
2020-06-17 10:45:40.001  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 1------------------------------------
2020-06-17 10:45:40.290  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [moped-01.srvs.cloudkafka.com:9094, moped-02.srvs.cloudkafka.com:9094, moped-03.srvs.cloudkafka.com:9094]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = [hidden]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = SCRAM-SHA-256
	security.protocol = SASL_SSL
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class com.citi.stg.ExceptionListCreator.TradeModel.TradeSerializer

2020-06-17 10:45:40.311  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.5.0
2020-06-17 10:45:40.312  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 66563e712b0b9f84
2020-06-17 10:45:40.312  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1592370940311
2020-06-17 10:45:43.147  INFO 12652 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: oKidZzIGS8CpolkrwCTN7A
2020-06-17 10:45:43.431  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:1------------------------------------
2020-06-17 10:45:43.431  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:1------------------------------------
2020-06-17 10:45:43.431  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:1------------------------------------
2020-06-17 10:45:43.521  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 4------------------------------------
2020-06-17 10:45:43.526  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:4------------------------------------
2020-06-17 10:45:43.535  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.ExceptionListMaker               : >>>>>>>>>>>>>>>>   Trade with tradeId=  id8   is found to be duplicate   <<<<<<<<<<<<<<<
2020-06-17 10:45:43.535  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 5------------------------------------
2020-06-17 10:45:43.539  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:5------------------------------------
2020-06-17 10:45:43.542  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] c.c.s.E.ExceptionListMaker               : >>>>>>>>>>>>>>>>   Trade with tradeId=  HIC9347   is found to be duplicate   <<<<<<<<<<<<<<<
2020-06-17 10:45:43.543  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 6------------------------------------
2020-06-17 10:45:43.544  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 4
2020-06-17 10:45:43.544  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HGC2347, firm=FAC, genericSecurity=GenericSecurity [securityType=EQ, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:43.545  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:43.548  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:6------------------------------------
2020-06-17 10:45:43.548  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 5
2020-06-17 10:45:43.548  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HBC3347, firm=FAC, genericSecurity=GenericSecurity [securityType=FD, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:43.549  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:43.550  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 6
2020-06-17 10:45:43.550  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HIC9347, firm=MLI, genericSecurity=GenericSecurity [securityType=CP, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:43.551  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:43.552  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 7
2020-06-17 10:45:43.552  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HJC8347, firm=SLI, genericSecurity=GenericSecurity [securityType=EQ, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:43.553  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:43.555  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 8
2020-06-17 10:45:43.555  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HEC5347, firm=SLI, genericSecurity=GenericSecurity [securityType=CP, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:43.556  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:43.559  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 9
2020-06-17 10:45:43.559  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HFC6347, firm=JDC, genericSecurity=GenericSecurity [securityType=FD, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:43.560  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:43.563  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 10
2020-06-17 10:45:43.563  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HAC1354, firm=JDC, genericSecurity=GenericSecurity [securityType=CP, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:43.564  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:43.567  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 11
2020-06-17 10:45:43.567  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HDC4347, firm=MLI, genericSecurity=GenericSecurity [securityType=EQ, securityIdentifier=XX7567], date=2020-05-13]
2020-06-17 10:45:43.567  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:43.568  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 12
2020-06-17 10:45:43.569  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HNC2347, firm=SLI, genericSecurity=GenericSecurity [securityType=EQ, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:43.569  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:43.571  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 13
2020-06-17 10:45:43.571  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HIC9347, firm=MLI, genericSecurity=GenericSecurity [securityType=CP, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:43.571  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:43.572  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 14
2020-06-17 10:45:43.573  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HKC0347, firm=FAC, genericSecurity=GenericSecurity [securityType=CP, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:43.573  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:43.574  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 15
2020-06-17 10:45:43.575  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HBC3347, firm=FAC, genericSecurity=GenericSecurity [securityType=FD, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:43.575  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:43.583  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.c.s.E.ExceptionListMaker               : >>>>>>>>>>>>>>>>   Trade with tradeId=  id6   is found to be duplicate   <<<<<<<<<<<<<<<
2020-06-17 10:45:43.583  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 7------------------------------------
2020-06-17 10:45:43.585  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheReader   : calling exception list Maker
2020-06-17 10:45:43.586  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:7------------------------------------
2020-06-17 10:45:43.631  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.ExceptionListMaker               : >>>>>>>>>>>>>>>>   Trade with tradeId=  HIC9347   is found to be duplicate   <<<<<<<<<<<<<<<
2020-06-17 10:45:43.631  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 8------------------------------------
2020-06-17 10:45:43.633  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:8------------------------------------
2020-06-17 10:45:43.641  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 9------------------------------------
2020-06-17 10:45:43.643  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:9------------------------------------
2020-06-17 10:45:43.654  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] Seeking to offset 127 for partition 56y1nhk1-GenericTradeObject-0
2020-06-17 10:45:43.660 ERROR 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] essageListenerContainer$ListenerConsumer : Error handler threw an exception

org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.citi.stg.ExceptionListCreator.Consumer.consume(com.citi.stg.ExceptionListCreator.GenericTradeModel.GenericTrade) throws java.lang.InterruptedException' threw exception; nested exception is java.lang.IllegalArgumentException: non null hash key required; nested exception is java.lang.IllegalArgumentException: non null hash key required
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:157) ~[spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:103) ~[spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1887) [spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1792) [spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1719) [spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1617) [spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1348) [spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1064) [spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:972) [spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_241]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_241]
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.citi.stg.ExceptionListCreator.Consumer.consume(com.citi.stg.ExceptionListCreator.GenericTradeModel.GenericTrade) throws java.lang.InterruptedException' threw exception; nested exception is java.lang.IllegalArgumentException: non null hash key required; nested exception is java.lang.IllegalArgumentException: non null hash key required
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1899) [spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	... 10 common frames omitted
Caused by: java.lang.IllegalArgumentException: non null hash key required
	at org.springframework.util.Assert.notNull(Assert.java:198) ~[spring-core-5.2.7.RELEASE.jar:5.2.7.RELEASE]
	at org.springframework.data.redis.core.AbstractOperations.rawHashKey(AbstractOperations.java:162) ~[spring-data-redis-2.3.1.RELEASE.jar:2.3.1.RELEASE]
	at org.springframework.data.redis.core.DefaultHashOperations.get(DefaultHashOperations.java:52) ~[spring-data-redis-2.3.1.RELEASE.jar:2.3.1.RELEASE]
	at com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp.findById(RedisTradeRepositoryForRedisHashImp.java:30) ~[classes/:na]
	at com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp$$FastClassBySpringCGLIB$$2558944f.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.7.RELEASE.jar:5.2.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771) ~[spring-aop-5.2.7.RELEASE.jar:5.2.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.7.RELEASE.jar:5.2.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.7.RELEASE.jar:5.2.7.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.7.RELEASE.jar:5.2.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.7.RELEASE.jar:5.2.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.7.RELEASE.jar:5.2.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.2.7.RELEASE.jar:5.2.7.RELEASE]
	at com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp$$EnhancerBySpringCGLIB$$70b4dd41.findById(<generated>) ~[classes/:na]
	at com.citi.stg.ExceptionListCreator.ExceptionListMaker.makeExceptionList(ExceptionListMaker.java:54) ~[classes/:na]
	at com.citi.stg.ExceptionListCreator.CacheReader.startReadingFromCache(CacheReader.java:64) ~[classes/:na]
	at com.citi.stg.ExceptionListCreator.Consumer.consume(Consumer.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.7.RELEASE.jar:5.2.7.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.7.RELEASE.jar:5.2.7.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:334) ~[spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1854) [spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1836) [spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.5.2.RELEASE.jar:2.5.2.RELEASE]
	... 8 common frames omitted

2020-06-17 10:45:43.685  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.ExceptionListMaker               : >>>>>>>>>>>>>>>>   Trade with tradeId=  HIC9347   is found to be duplicate   <<<<<<<<<<<<<<<
2020-06-17 10:45:43.685  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 10------------------------------------
2020-06-17 10:45:43.688  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:10------------------------------------
2020-06-17 10:45:43.745  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 11------------------------------------
2020-06-17 10:45:43.748  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:11------------------------------------
2020-06-17 10:45:43.796  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 12------------------------------------
2020-06-17 10:45:43.798  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:12------------------------------------
2020-06-17 10:45:43.858  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.ExceptionListMaker               : >>>>>>>>>>>>>>>>   Trade with tradeId=  HIC9347   is found to be duplicate   <<<<<<<<<<<<<<<
2020-06-17 10:45:43.858  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 13------------------------------------
2020-06-17 10:45:43.865  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:13------------------------------------
2020-06-17 10:45:43.918  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 14------------------------------------
2020-06-17 10:45:43.921  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:14------------------------------------
2020-06-17 10:45:43.921  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 16
2020-06-17 10:45:43.922  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HIC9347, firm=MLI, genericSecurity=GenericSecurity [securityType=CP, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:43.922  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:43.969  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 15------------------------------------
2020-06-17 10:45:43.972  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:15------------------------------------
2020-06-17 10:45:44.021  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.ExceptionListMaker               : >>>>>>>>>>>>>>>>   Trade with tradeId=  HFC6347   is found to be duplicate   <<<<<<<<<<<<<<<
2020-06-17 10:45:44.022  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 16------------------------------------
2020-06-17 10:45:44.037  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:16------------------------------------
2020-06-17 10:45:44.082  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.ExceptionListMaker               : >>>>>>>>>>>>>>>>   Trade with tradeId=  HAC1354   is found to be duplicate   <<<<<<<<<<<<<<<
2020-06-17 10:45:44.082  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 17------------------------------------
2020-06-17 10:45:44.085  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:17------------------------------------
2020-06-17 10:45:44.153  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.ExceptionListMaker               : >>>>>>>>>>>>>>>>   Trade with tradeId=  HDC4347   is found to be duplicate   <<<<<<<<<<<<<<<
2020-06-17 10:45:44.154  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 18------------------------------------
2020-06-17 10:45:44.160  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:18------------------------------------
2020-06-17 10:45:44.218  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 19------------------------------------
2020-06-17 10:45:44.221  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:19------------------------------------
2020-06-17 10:45:44.292  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.ExceptionListMaker               : >>>>>>>>>>>>>>>>   Trade with tradeId=  HIC9347   is found to be duplicate   <<<<<<<<<<<<<<<
2020-06-17 10:45:44.292  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 20------------------------------------
2020-06-17 10:45:44.298  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:20------------------------------------
2020-06-17 10:45:44.374  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.ExceptionListMaker               : >>>>>>>>>>>>>>>>   Trade with tradeId=  HKC0347   is found to be duplicate   <<<<<<<<<<<<<<<
2020-06-17 10:45:44.374  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 21------------------------------------
2020-06-17 10:45:44.377  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:21------------------------------------
2020-06-17 10:45:44.432  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sending trrade no: 22------------------------------------
2020-06-17 10:45:44.434  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.E.SenderToKafka                    : ----------------sent trrade no:22------------------------------------
2020-06-17 10:45:44.435  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 17
2020-06-17 10:45:44.435  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HAC1354, firm=JDC, genericSecurity=GenericSecurity [securityType=CP, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:44.435  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:44.437  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 18
2020-06-17 10:45:44.437  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HJC8347, firm=SLI, genericSecurity=GenericSecurity [securityType=EQ, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:44.437  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:44.438  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 19
2020-06-17 10:45:44.439  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HFC6347, firm=JDC, genericSecurity=GenericSecurity [securityType=FD, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:44.439  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:44.440  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 20
2020-06-17 10:45:44.440  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HGC2347, firm=FAC, genericSecurity=GenericSecurity [securityType=EQ, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:44.440  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:44.441  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 21
2020-06-17 10:45:44.442  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HKC0347, firm=FAC, genericSecurity=GenericSecurity [securityType=CP, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:44.442  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:44.443  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 22
2020-06-17 10:45:44.443  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HEC5347, firm=SLI, genericSecurity=GenericSecurity [securityType=CP, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:44.443  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:44.444  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 23
2020-06-17 10:45:44.444  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HDC4347, firm=MLI, genericSecurity=GenericSecurity [securityType=EQ, securityIdentifier=XX7567], date=2020-05-13]
2020-06-17 10:45:44.445  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:44.446  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 24
2020-06-17 10:45:44.446  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HIC9347, firm=MLI, genericSecurity=GenericSecurity [securityType=CP, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:44.446  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:44.447  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 25
2020-06-17 10:45:44.447  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HNC2347, firm=SLI, genericSecurity=GenericSecurity [securityType=EQ, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:44.447  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:45:44.448  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade no: 26
2020-06-17 10:45:44.448  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.stg.ExceptionListCreator.Consumer    : consumed trade is : 
GenericTrade [tradeId=HIC9347, firm=MLI, genericSecurity=GenericSecurity [securityType=CP, securityIdentifier=XX4567], date=2020-05-13]
2020-06-17 10:45:44.448  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] c.c.s.ExceptionListCreator.CacheWriter   : com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisListImp@36aa52d2 com.citi.stg.ExceptionListCreator.RedisRepository.RedisTradeRepositoryForRedisHashImp@4eb166a1 com.citi.stg.ExceptionListCreator.RedisRepository.RedisCashSecurityRepositoryForRedisHashImp@36c281ed
2020-06-17 10:46:14.676  INFO 12652 --- [RMI TCP Connection(5)-127.0.0.1] inMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2020-06-17 10:46:15.208  INFO 12652 --- [RMI TCP Connection(5)-127.0.0.1] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-06-17 10:46:15.390  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] Revoke previously assigned partitions 56y1nhk1-GenericTradeObject-0
2020-06-17 10:46:15.391  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : 56y1nhk1-GenericTradeObject: partitions revoked: [56y1nhk1-GenericTradeObject-0]
2020-06-17 10:46:15.391  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] Member consumer-56y1nhk1-GenericTradeObject-1-9cc95cbd-fbb0-4fae-9f5a-a0d7acb8b41b sending LeaveGroup request to coordinator moped-01.srvs.cloudkafka.com:9094 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2020-06-17 10:46:15.392  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-5, groupId=56y1nhk1-GenericTradeObject] Revoke previously assigned partitions 56y1nhk1-GenericTradeObject-4
2020-06-17 10:46:15.392  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.s.k.l.KafkaMessageListenerContainer    : 56y1nhk1-GenericTradeObject: partitions revoked: [56y1nhk1-GenericTradeObject-4]
2020-06-17 10:46:15.393  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-5, groupId=56y1nhk1-GenericTradeObject] Member consumer-56y1nhk1-GenericTradeObject-5-0b439fa6-d873-47ab-82bc-6947677785ea sending LeaveGroup request to coordinator moped-01.srvs.cloudkafka.com:9094 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2020-06-17 10:46:15.393  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-3, groupId=56y1nhk1-GenericTradeObject] Revoke previously assigned partitions 56y1nhk1-GenericTradeObject-2
2020-06-17 10:46:15.393  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : 56y1nhk1-GenericTradeObject: partitions revoked: [56y1nhk1-GenericTradeObject-2]
2020-06-17 10:46:15.393  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-3, groupId=56y1nhk1-GenericTradeObject] Member consumer-56y1nhk1-GenericTradeObject-3-ffb5a689-934c-4c4e-aa2d-912306b63205 sending LeaveGroup request to coordinator moped-01.srvs.cloudkafka.com:9094 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2020-06-17 10:46:15.394  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-4, groupId=56y1nhk1-GenericTradeObject] Revoke previously assigned partitions 56y1nhk1-GenericTradeObject-3
2020-06-17 10:46:15.394  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-2, groupId=56y1nhk1-GenericTradeObject] Revoke previously assigned partitions 56y1nhk1-GenericTradeObject-1
2020-06-17 10:46:15.394  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] o.s.k.l.KafkaMessageListenerContainer    : 56y1nhk1-GenericTradeObject: partitions revoked: [56y1nhk1-GenericTradeObject-3]
2020-06-17 10:46:15.394  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : 56y1nhk1-GenericTradeObject: partitions revoked: [56y1nhk1-GenericTradeObject-1]
2020-06-17 10:46:15.394  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-4, groupId=56y1nhk1-GenericTradeObject] Member consumer-56y1nhk1-GenericTradeObject-4-fb83fc1d-75d7-4c01-9eda-1bb848573e55 sending LeaveGroup request to coordinator moped-01.srvs.cloudkafka.com:9094 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2020-06-17 10:46:15.394  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-2, groupId=56y1nhk1-GenericTradeObject] Member consumer-56y1nhk1-GenericTradeObject-2-1962a68d-f0cd-4d14-9e17-e127145f18c0 sending LeaveGroup request to coordinator moped-01.srvs.cloudkafka.com:9094 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2020-06-17 10:46:15.398  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-1, groupId=56y1nhk1-GenericTradeObject] Unsubscribed all topics or patterns and assigned partitions
2020-06-17 10:46:15.398  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.s.c.ThreadPoolTaskScheduler          : Shutting down ExecutorService
2020-06-17 10:46:15.399  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-2, groupId=56y1nhk1-GenericTradeObject] Unsubscribed all topics or patterns and assigned partitions
2020-06-17 10:46:15.399  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.s.c.ThreadPoolTaskScheduler          : Shutting down ExecutorService
2020-06-17 10:46:15.400  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-4, groupId=56y1nhk1-GenericTradeObject] Unsubscribed all topics or patterns and assigned partitions
2020-06-17 10:46:15.400  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] o.s.s.c.ThreadPoolTaskScheduler          : Shutting down ExecutorService
2020-06-17 10:46:15.400  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-5, groupId=56y1nhk1-GenericTradeObject] Unsubscribed all topics or patterns and assigned partitions
2020-06-17 10:46:15.400  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] o.s.s.c.ThreadPoolTaskScheduler          : Shutting down ExecutorService
2020-06-17 10:46:15.400  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-56y1nhk1-GenericTradeObject-3, groupId=56y1nhk1-GenericTradeObject] Unsubscribed all topics or patterns and assigned partitions
2020-06-17 10:46:15.400  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.s.c.ThreadPoolTaskScheduler          : Shutting down ExecutorService
2020-06-17 10:46:15.761  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] essageListenerContainer$ListenerConsumer : 56y1nhk1-GenericTradeObject: Consumer stopped
2020-06-17 10:46:15.767  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] essageListenerContainer$ListenerConsumer : 56y1nhk1-GenericTradeObject: Consumer stopped
2020-06-17 10:46:15.767  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] essageListenerContainer$ListenerConsumer : 56y1nhk1-GenericTradeObject: Consumer stopped
2020-06-17 10:46:15.768  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] essageListenerContainer$ListenerConsumer : 56y1nhk1-GenericTradeObject: Consumer stopped
2020-06-17 10:46:15.769  INFO 12652 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] essageListenerContainer$ListenerConsumer : 56y1nhk1-GenericTradeObject: Consumer stopped
2020-06-17 10:46:15.769  INFO 12652 --- [RMI TCP Connection(5)-127.0.0.1] o.s.i.endpoint.EventDrivenConsumer       : Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-06-17 10:46:15.770  INFO 12652 --- [RMI TCP Connection(5)-127.0.0.1] o.s.i.channel.PublishSubscribeChannel    : Channel 'application-1.errorChannel' has 0 subscriber(s).
2020-06-17 10:46:15.770  INFO 12652 --- [RMI TCP Connection(5)-127.0.0.1] o.s.i.endpoint.EventDrivenConsumer       : stopped bean '_org.springframework.integration.errorLogger'
2020-06-17 10:46:15.770  INFO 12652 --- [RMI TCP Connection(5)-127.0.0.1] o.s.s.c.ThreadPoolTaskScheduler          : Shutting down ExecutorService 'taskScheduler'
2020-06-17 10:46:15.773  INFO 12652 --- [RMI TCP Connection(5)-127.0.0.1] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-17 10:46:15.774  INFO 12652 --- [RMI TCP Connection(5)-127.0.0.1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2020-06-17 10:46:15.977  INFO 12652 --- [RMI TCP Connection(5)-127.0.0.1] org.mongodb.driver.connection            : Closed connection [connectionId{localValue:4, serverValue:32985}] to tradeprocessing-shard-00-01-oasxz.mongodb.net:27017 because the pool has been closed.
2020-06-17 10:46:15.978  INFO 12652 --- [RMI TCP Connection(5)-127.0.0.1] org.mongodb.driver.connection            : Closed connection [connectionId{localValue:6, serverValue:35954}] to tradeprocessing-shard-00-01-oasxz.mongodb.net:27017 because the pool has been closed.
2020-06-17 10:46:15.978  INFO 12652 --- [RMI TCP Connection(5)-127.0.0.1] org.mongodb.driver.connection            : Closed connection [connectionId{localValue:5, serverValue:35954}] to tradeprocessing-shard-00-01-oasxz.mongodb.net:27017 because the pool has been closed.
2020-06-17 10:46:15.982  INFO 12652 --- [RMI TCP Connection(5)-127.0.0.1] o.s.i.monitor.IntegrationMBeanExporter   : Summary on shutdown: bean 'errorChannel'
2020-06-17 10:46:15.982  INFO 12652 --- [RMI TCP Connection(5)-127.0.0.1] o.s.i.monitor.IntegrationMBeanExporter   : Summary on shutdown: nullChannel
2020-06-17 10:46:15.982  INFO 12652 --- [RMI TCP Connection(5)-127.0.0.1] o.s.i.monitor.IntegrationMBeanExporter   : Summary on shutdown: bean '_org.springframework.integration.errorLogger.handler' for component '_org.springframework.integration.errorLogger'
